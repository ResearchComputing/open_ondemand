set -x

# Find available port to run server on
port=$(find_port ${host})

# make directory that will hold all RStudio content
mkdir -p /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>

# create an Rstudio directory that will be a symlink (contains all Rstudio configurations e.g. console history)
# mkdir -p /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>

# link created directory to path created by launching Rstudio
# ln -s /projects/$USER/.rstudioserver/rstudio /home/$USER/.local/share/rstudio

# create directories /var/lib and /var/run directories that will be used by rstudio server
TMPDIR=/projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>
SERVER_DATA_DIR=TMPDIR
mkdir -p ${SERVER_DATA_DIR}/var/{lib,run}
chmod a+rw ${SERVER_DATA_DIR}/var/run
chmod +t ${SERVER_DATA_DIR}/var/run

# make sure run and rstudio var lib directories are created
mkdir -p /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>/run /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>/var-lib-rstudio-server

# kill off old db since changing versions will not work otherwise
rm -f /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>/var-lib-rstudio-server/rstudio-os.sqlite

# TODO: symlink to /projects/<user>/.rstudioserver/rstudio-server-4.2.2_overlay.img
# TODO: create clean-up script that removes old setup for RStudio

# create Apptainer as symlink so we can use them
if [[ ! -e ~/.apptainer ]]; then
	mkdir -p ~/work/..apptainer
	ln -sr ~/work/.apptainer ~/.apptainer
fi

# export environment variables for Apptainer items 
export APPTAINER_TMPDIR=/projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>
export APPTAINER_CACHEDIR=/projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>

# create overlay if it doesn't exist and add it to the user's projects directory
if ! test -f "/projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>/rstudio-server-<%= context.r_version %>_overlay.img"; then

	cd /projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>
	# apptainer overlay create --fakeroot --sparse --size 100000 rstudio-server-<%= context.r_version %>_overlay.img
    apptainer overlay create --fakeroot --sparse --size 25000 rstudio-server-<%= context.r_version %>_overlay.img

fi

# set environment variable for overlay and image so they can be used later
export APPTAINER_OVERLAY=/projects/$USER/.rstudioserver/rstudio-<%= context.r_version %>/rstudio-server-<%= context.r_version %>_overlay.img
export RSTUDIO_SERVER_IMAGE=/curc/sw/containers/open_ondemand/rstudio-server-<%= context.r_version %>.sif

<%-
  require 'securerandom'
  csrftoken = SecureRandom.uuid
-%>
export csrf_token="<%= csrftoken %>"
